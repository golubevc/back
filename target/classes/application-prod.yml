spring:
  application:
    name: anecole-backend
  
  # Database Configuration для продакшена
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:anecoledb}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:anecole_user}
    password: ${DB_PASSWORD:password}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  # JPA Configuration для продакшена
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  
  # H2 Console отключена в продакшене
  h2:
    console:
      enabled: false
  
  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:}
  expiration: ${JWT_EXPIRATION:86400000}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
  forward-headers-strategy: native

# Logging для продакшена
logging:
  level:
    root: INFO
    com.school.anecole: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/anecole/backend.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 10

# CORS Configuration для продакшена
cors:
  allowed-origins: ${FRONTEND_URL:http://localhost:3000}
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

# Actuator для мониторинга
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized 